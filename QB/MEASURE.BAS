DEFINT A-Z

TYPE FontDataT
    CH0 AS STRING * 1
    CH1 AS STRING * 1
    FONT AS INTEGER
    W AS INTEGER
    H AS INTEGER
    TOP AS INTEGER
    BOTTOM AS INTEGER
    ATTR AS INTEGER
    BUFLEN AS INTEGER
END TYPE
DIM SHARED ASM(100) AS INTEGER,BITMAP(8194) AS INTEGER
COMMON SHARED W,H,FASC,FHZK,ATTR,XADJ,MSTR AS STRING

DEF SEG=VARSEG(ASM(0))
BLOAD "UTIL.BIN",VARPTR(ASM(0))
ST=0:CALL ABSOLUTE(ST,VARPTR(ASM(0))+ASM(0))
IF ST=0 THEN PRINT "Please run UCDOS and RDFNT first.":END
DEF SEG
CALL MainLoop
CLS:END

SUB MainLoop
  STATIC RUNNING AS INTEGER
  MSTR="Sample Text，范例文本"
  W=12: H=24: FASC=0: FHZK=0: ATTR=1: XADJ=0
  RUNNING=1
  DO
    CLS
    RES=0: CALL MeasureAndDrawStr(MSTR,RES,W,H,FASC,FHZK,ATTR,XADJ)
    LOCATE 25,1:PRINT "字符串长度：";RES;"px";
    LOCATE 1,1:PRINT "0.内容：";MSTR
    PRINT "1.字符宽度：";W;"px";TAB(25);
    PRINT "2.字符高度：";H;"px";TAB(50);
    PRINT "3.西文字体：";FASC
    PRINT "4.中文字体：";FHZK;TAB(25);
    PRINT "5.字符属性：";ATTR;TAB(50);
    PRINT "6.字距调整：";XADJ;"px"
    PRINT "按0-6选择要修改的项目，按Esc或q退出。";
    K$="": DO: K$=INPUT$(1): LOOP WHILE K$=""
    PRINT "":PRINT ""
    SELECT CASE K$
      CASE CHR$(27)
        RUNNING=0
      CASE "q"
        RUNNING=0
      CASE "Q"
        RUNNING=0
      CASE "0"
        INPUT "内容：",V$: IF V$<>"" THEN MSTR=V$
      CASE "1"
        INPUT "字符宽度（px）：",V$: IF V$<>"" THEN W=VAL(V$)
      CASE "2"
        INPUT "字符高度（px）：",V$: IF V$<>"" THEN H=VAL(V$)
      CASE "3"
        INPUT "西文字体（0-10）：",V$: IF V$<>"" THEN FASC=VAL(V$)
      CASE "4"
        INPUT "中文字体（0-33）：",V$: IF V$<>"" THEN FHZK=VAL(V$)
      CASE "5"
        INPUT "字符属性：",V$: IF V$<>"" THEN ATTR=VAL(V$)
      CASE "6"
        INPUT "字距调整（px）：",V$: IF V$<>"" THEN XADJ=VAL(V$)
    END SELECT
  LOOP UNTIL (RUNNING=0)
END SUB

SUB MeasureAndDrawStr(STR AS STRING, RES AS INTEGER, W AS INTEGER, H AS INTEGER, FONTASC AS INTEGER, FONTHZK AS INTEGER, ATTR AS INTEGER, DIST AS INTEGER)
  STATIC WA,HA
  I=0: L=LEN(STR): FONT=0: RES=0
  WHILE I<L
    CH$=MID$(STR,I+1,1): FONT=FONTASC: WA=W: HA=H
    IF ASC(CH$)>=&H80 THEN
      I=I+1: CH$=CH$+MID$(STR,I+1,1): FONT=FONTHZK
    END IF
    CALL GetChar(CH$,FONT,WA,H,ATTR)
    IF ((ATTR AND 8)=0 AND (ATTR AND 1)=0) OR ((ATTR AND 8)<>0 AND (ATTR AND 1)<>0) THEN
      CALL DrawChar(HA,WA,RES,128,15,BITMAP())
      WA=HA
    ELSE
      CALL DrawChar(WA,HA,RES,128,15,BITMAP())
    END IF
    DX=WA+DIST: IF DX>0 THEN RES=RES+DX
    I=I+1
  WEND
END SUB

SUB GetChar(STR AS STRING,FONT AS INTEGER,W AS INTEGER,H AS INTEGER,ATTR AS INTEGER)
  STATIC Param AS FontDataT
  IF ASC(MID$(STR,1,1)) < &H80 THEN
    Param.CH0=STR: Param.CH1=CHR$(0)
    Param.W=W
  ELSE
    Param.CH0=MID$(STR,2,1): Param.CH1=MID$(STR,1,1)
    Param.W=W*2
  END IF
  Param.FONT=FONT: Param.H=H
  Param.TOP=0: Param.BOTTOM=H-1
  Param.ATTR=ATTR: Param.BUFLEN=16384
  DS=VARSEG(Param):ES=VARSEG(BITMAP(0))
  SI=VARPTR(Param):DI=VARPTR(BITMAP(0))
  DEF SEG=VARSEG(ASM(0))
  CALL ABSOLUTE(BYVAL ES,BYVAL DI,BYVAL DS,BYVAL SI,VARPTR(ASM(0))+ASM(1))
  DEF SEG
  W=Param.W
END SUB

SUB DrawChar(W AS INTEGER, H AS INTEGER, X AS INTEGER, Y AS INTEGER, C AS INTEGER, B() AS INTEGER)
  STATIC DS,SI
  DS=VARSEG(B(0)):SI=VARPTR(B(0))
  DEF SEG=VARSEG(ASM(0))
  CALL ABSOLUTE(BYVAL DS,BYVAL SI,BYVAL H,BYVAL W,BYVAL Y,BYVAL X,BYVAL C,VARPTR(ASM(0))+ASM(2))
  DEF SEG
END SUB

