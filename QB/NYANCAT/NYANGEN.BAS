DEFINT A-Z

TYPE BMPHeaderT
    id AS STRING * 2
    size AS LONG
    rr1 AS INTEGER
    rr2 AS INTEGER
    offset AS LONG
    hsize AS LONG
    wid AS LONG
    hei AS LONG
    planes AS INTEGER
    bpp AS INTEGER
    pakbyte AS LONG
    imagebytes AS LONG
    xres AS LONG
    yres AS LONG
    colch AS LONG
    ic AS LONG
END TYPE

DIM BMPFILE(11) AS STRING
DIM SHARED ASM(9) AS INTEGER,DPAL(15,2) AS INTEGER
DIM SHARED BF(11,2000) AS INTEGER,RLE(1000) AS INTEGER,DF(8000) AS INTEGER
COMMON SHARED RLEL AS INTEGER,DFL AS INTEGER

FOR I=0 TO 11:READ BMPFILE(I):NEXT I
DATA "00.BMP","01.BMP","02.BMP","03.BMP"
DATA "04.BMP","05.BMP","06.BMP","07.BMP"
DATA "08.BMP","09.BMP","10.BMP","11.BMP"

FOR I=0 TO 15:READ DPAL(I,0),DPAL(I,1),DPAL(I,2):NEXT I
DATA &H00,&H00,&H00, &H00,&H00,&Ha8, &H00,&Ha8,&H00, &H00,&Ha8,&Ha8
DATA &Ha8,&H00,&H00, &Ha8,&H00,&Ha8, &Ha8,&Ha8,&H00, &Ha8,&Ha8,&Ha8
DATA &H54,&H54,&H54, &H54,&H54,&Hff, &H54,&Hff,&H54, &H54,&Hff,&Hff
DATA &Hff,&H54,&H54, &Hff,&H54,&Hff, &Hff,&Hff,&H54, &Hff,&Hff,&Hff

DEF SEG=VARSEG(ASM(0)):FOR I=0 TO 14:READ N:POKE VARPTR(ASM(0))+I,N:NEXT I:DEF SEG
DATA &H55,&H89,&He5,&Hb8,&H03,&H10,&H8a,&H5e,&H06,&Hcd,&H10,&H5d,&Hca,&H02,&H00

FOR I=0 TO 11
  CALL LOADBMP(BMPFILE(I),BF(),I)
NEXT I

RLEL=0:CALL GETRLE(RLE(),RLEL,BF(),0)
DFL=0:FOR I=0 TO 10:CALL IMGDIFF(DF(),DFL,BF(),I,I+1):NEXT I
CALL IMGDIFF(DF(),DFL,BF(),11,0)

REM CALL TESTDISP
CALL SAVEDATA
END

SUB LOADBMP(FBMP AS STRING,BUF() AS INTEGER,IDX AS INTEGER)
  STATIC hdr AS BMPHeaderT,PAL AS STRING*64,LN AS STRING*80
  STATIC I AS INTEGER,Y AS INTEGER,P AS INTEGER
  STATIC A AS INTEGER,B AS INTEGER,A1,B1
  DIM COLTAB(15) AS INTEGER

  OPEN FBMP FOR BINARY AS #1
  GET #1,1,hdr
  IF "BM"<>hdr.id THEN PRINT "Invalid BMP File.":END
  W=hdr.wid: H=hdr.hei
  IF W<>80 OR H<>50 OR hdr.bpp<>4 THEN PRINT "Not 80x50x16 BMP file.":END
  rowBytesBmp=((W+31)\32)*4
  GET #1,15+hdr.hsize,PAL
  FOR I=0 TO 15
    B=ASC(MID$(PAL,I*4+1,1))
    G=ASC(MID$(PAL,I*4+2,1))
    R=ASC(MID$(PAL,I*4+3,1))
    COLTAB(I)=GETCOLOR(R,G,B)
  NEXT I
  P=0
  FOR Y=0 TO 24
    GET #1,15+hdr.hsize+64+(24-Y)*80,LN
    FOR I=1 TO 40
      A=ASC(MID$(LN,I+40,1)):B=ASC(MID$(LN,I,1))
      A1=COLTAB(A\16):B1=COLTAB(B\16)
      BUF(IDX,P)=(A1*16) OR B1:P=P+1
      A1=COLTAB(A AND 15):B1=COLTAB(B AND 15)
      BUF(IDX,P)=(A1*16) OR B1:P=P+1
    NEXT I
  NEXT Y
  CLOSE #1
END SUB

FUNCTION GETCOLOR(R AS INTEGER,G AS INTEGER,B AS INTEGER)
  STATIC I AS INTEGER,D AS LONG,DMIN AS LONG,RS AS INTEGER
  DMIN=-1:RS=0
  FOR I=0 TO 15
    D=(R-DPAL(I,0))^2 + (G-DPAL(I,1))^2 + (B-DPAL(I,2))^2
    IF DMIN=-1 OR D<DMIN THEN DMIN=D:RS=I
  NEXT I
  GETCOLOR=RS
END FUNCTION

SUB GETRLE(D() AS INTEGER,L AS INTEGER,S() AS INTEGER,SI AS INTEGER)
  STATIC I,I0,J,RP,CUR,SLEN
  SLEN=2000:I=0:WHILE I<SLEN
    CUR=S(SI,I):RP=1:J=I+1
    WHILE J>0 AND J<SLEN AND RP<127
      IF S(SI,J)=CUR THEN J=J+1:RP=RP+1 ELSE J=0
    WEND
    IF RP>=3 THEN
      D(L)=RP OR 128:D(L+1)=CUR:L=L+2:I=I+RP
    ELSE
      I0=I:I=I+RP:J=0
      WHILE I<SLEN AND I-I0<127 AND J=0
        CUR=S(SI,I):RP=1:J=I+1
        WHILE J>0 AND J<SLEN AND J<I+3
          IF S(SI,J)=CUR THEN J=J+1 ELSE J=0
        WEND
	IF J=0 THEN I=I+1
      WEND
      D(L)=I-I0:L=L+1:FOR J=I0 TO I-1:D(L)=S(SI,J):L=L+1:NEXT J
    END IF
  WEND
END SUB

SUB IMGDIFF(D() AS INTEGER,DI AS INTEGER,S() AS INTEGER,I0 AS INTEGER,I1 AS INTEGER)
  STATIC Y,L,I
  DIM LD(160) AS INTEGER
  FOR Y=0 TO 24
    CALL LINEDIFF(LD(),L,S(),I0,I1,Y)
    IF L>0 THEN
      D(DI)=Y OR &HE0:DI=DI+1
      FOR I=0 TO L-1:D(DI)=LD(I):DI=DI+1:NEXT I
    END IF
  NEXT Y
  D(DI)=255:DI=DI+1
END SUB

SUB LINEDIFF(R() AS INTEGER,L AS INTEGER,S() AS INTEGER,I0 AS INTEGER,I1 AS INTEGER,Y AS INTEGER)
  STATIC X0,X,CNT,I,OF
  DIM G(80) AS INTEGER
  L=0:X0=-1:CNT=0
  FOR X=0 TO 79
    OF=Y*80+X
    IF S(I0,OF)<>S(I1,OF) THEN
      IF CNT=0 THEN X0=X
      G(CNT)=S(I1,OF)
      CNT=CNT+1
    ELSEIF CNT>0 THEN
      R(L)=X0:R(L+1)=CNT:L=L+2
      FOR I=0 TO CNT-1:R(L)=G(I):L=L+1:NEXT I
      CNT=0
    END IF
  NEXT X
  IF CNT>0 THEN
    R(L)=X0:R(L+1)=CNT:L=L+2
    FOR I=0 TO CNT-1:R(L)=G(I):L=L+1:NEXT I
  END IF
END SUB

SUB SAVEDATA()
  OPEN "NYANCAT.TXT" FOR OUTPUT AS #1
  CALL SAVEARR(RLE(),RLEL)
  CALL SAVEARR(DF(),DFL)
  CLOSE #1
END SUB

SUB SAVEARR(A() AS INTEGER,L AS INTEGER)
  PRINT #1,"DATA ";LTRIM$(RTRIM$(STR$(L)));",";
  FOR I=0 TO L-1
    PRINT #1,LTRIM$(RTRIM$(STR$(A(I))));
    IF I>=L-1 THEN
       PRINT #1,""
    ELSEIF ((I+1) MOD 18)=0 THEN
       PRINT #1,"":PRINT #1,"DATA ";
    ELSE
       PRINT #1,",";
    END IF
  NEXT I
END SUB

SUB TESTDISP()
  DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(BYVAL 0,VARPTR(ASM(0))):DEF SEG
  CALL DRAWRLE(RLE(),RLEL)
  I=0:IDF=0
  K$="":T0#=TIMER
  WHILE K$=""
    K$=INKEY$
    CALL DRAWDIFF(DF(),IDF)
    IF I>=11 THEN I=0:IDF=0 ELSE I=I+1
    T#=TIMER:WHILE T#-T0#<0.07:T#=TIMER:WEND:T0#=T#
  WEND
  DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(BYVAL 1,VARPTR(ASM(0))):DEF SEG
  CLS
END SUB

SUB DRAWSCR(A() AS INTEGER,IDX AS INTEGER)
  STATIC I AS INTEGER
  DEF SEG=&HB800
  FOR I=0 TO 1999:POKE I*2,220:POKE I*2+1,A(IDX,I):NEXT I
  DEF SEG
END SUB

SUB DRAWRLE(A() AS INTEGER,L AS INTEGER)
  STATIC I,J,N,N2,P
  DEF SEG=&HB800
  FOR I=0 TO 1999:POKE I*2,220:NEXT I
  P=1:I=0:WHILE I<L:N=A(I)
    IF N>=128 THEN
      N=N AND 127:N2=A(I+1):I=I+2
      FOR J=0 TO N-1:POKE P,N2:P=P+2:NEXT J
    ELSE
      FOR J=I+1 TO I+N:POKE P,A(J):P=P+2:NEXT J:I=I+N+1
    END IF
  WEND
  DEF SEG
END SUB

SUB DRAWDIFF(A() AS INTEGER,IDX AS INTEGER)
  STATIC I,Y,X,C,N
  DEF SEG=&HB800
  WHILE A(IDX)<>255
    N=A(IDX)
    IF N>=&HE0 THEN
      Y=N AND &H1F:IDX=IDX+1
    ELSE
      X=N:C=A(IDX+1):IDX=IDX+2
      FOR I=0 TO C-1
        POKE Y*160+X*2+1,A(IDX):X=X+1:IDX=IDX+1
      NEXT I
    END IF
  WEND
  IDX=IDX+1
  DEF SEG
END SUB

