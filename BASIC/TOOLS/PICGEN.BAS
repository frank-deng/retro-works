DEFINT A-Z
TYPE FontDataT
  CH0 AS STRING * 1
  CH1 AS STRING * 1
  FONT AS INTEGER
  W AS INTEGER
  H AS INTEGER
  TOP AS INTEGER
  BOTTOM AS INTEGER
  ATTR AS INTEGER
  BUFLEN AS INTEGER
END TYPE
DIM SHARED ASM(40),BITMASK(8),SCALEMAP(256)
DIM SHARED BG(4098) AS INTEGER,BITMAP(8194) AS INTEGER

REM DEBUG <PICGEN.TXT >DATA.TXT
DATA &H55,&H89,&HE5,&H8B,&H76,&H06,&HC7,&H04,&H00,&H00,&HB8,&H00
DATA &HDB,&HCD,&H2F,&H3C,&HFF,&H75,&H11,&H81,&HFB,&H50,&H54,&H75
DATA &H0B,&HB8,&H01,&H00,&HCD,&H79,&H75,&H04,&HC7,&H04,&H01,&H00
DATA &H89,&HEC,&H5D,&HCA,&H02,&H00,&HB8,&H0B,&HFF,&HCD,&H16,&HCB
DATA &H55,&H89,&HE5,&H1E,&H06,&HC4,&H7E,&H06,&HC5,&H76,&H0A,&HCD
DATA &H7E,&H07,&H1F,&H89,&HEC,&H5D,&HCA,&H08,&H00

REM Load asm then Check if UCDOS and RDFNT is running
DEF SEG=VARSEG(ASM(0)):P=VARPTR(ASM(0))
FOR I=0 TO 68:READ D:POKE P+I,D:NEXT I
ENVOK=0:CALL ABSOLUTE(ENVOK,P)
IF ENVOK=0 THEN PRINT "Please run UCDOS and RDFNT first.":END
DEF SEG

REM Initialize data needed
FOR I=0 TO 7: BITMASK(I)=2^(7-I): NEXT I
FOR I=0 TO 255:V=0
  IF I AND BITMASK(4) THEN V=V OR &HC000
  IF I AND BITMASK(5) THEN V=V OR &H3000
  IF I AND BITMASK(6) THEN V=V OR &H0C00
  IF I AND BITMASK(7) THEN V=V OR &H0300
  IF I AND BITMASK(0) THEN V=V OR &H00C0
  IF I AND BITMASK(1) THEN V=V OR &H0030
  IF I AND BITMASK(2) THEN V=V OR &H000C
  IF I AND BITMASK(3) THEN V=V OR &H0003
  SCALEMAP(I)=V
NEXT I

REM MOONRIVR.BAS
LOCATE 1,1,0:SCREEN 1:CLS
DEF SEG=VARSEG(BG(0)):BLOAD "BG.PIC",VARPTR(BG(0)):DEF SEG
CALL ScaleImage(BITMAP(),BG()):PUT (0,0),BITMAP
CALL DrawStr("Moon River",7,20,2,56,70,0,1)
CALL DrawStr("Audrey Hepburn",49,148,10,32,32,0,2)
DEF SEG = &HB800: BSAVE "MOONRIVR.PIC", 0, 16384: DEF SEG
WHILE INPUT$(1) = "": WEND

REM ZSJS.BAS
LOCATE 1,1,0:SCREEN 2:CALL PreDraw:CLS
CALL DrawStr("÷Ó ¬",0,0,3,156,76,0,1)
CALL DrawStr("Ω‘À≥",0,76,3,156,76,0,1)
GET (0,0)-(156*2-1,76*2-1),BITMAP(0)
DATASIZE=((156*2+7)\8)*(76*2)+4
DEF SEG=VARSEG(BITMAP(0)): BSAVE "ZSJS.PIC",0,DATASIZE: DEF SEG
WHILE INPUT$(1) = "": WEND

SCREEN 0: WIDTH 80: LOCATE ,,1: CLS : END

SUB PreDraw()
  DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))+&H2A):DEF SEG
END SUB

SUB ScaleImage(DST() AS INTEGER,SRC() AS INTEGER)
  STATIC SRCL,I,P
  SRCL=(SRC(0)+7)\8
  DST(0)=SRCL*16
  DST(1)=SRC(1)
  DEF SEG=VARSEG(SRC(0)):P=VARPTR(SRC(2))
  FOR I=0 TO SRCL*SRC(1)-1
    DST(I+2)=SCALEMAP(PEEK(P+I))
  NEXT I
END SUB

SUB DrawStr(STR AS STRING, X1 AS INTEGER, Y1 AS INTEGER, FONT AS INTEGER, W0 AS INTEGER, H AS INTEGER, SP0 AS INTEGER, C AS INTEGER)
  STATIC I,L,WA,XA,CH$
  I=0: L=LEN(STR): WA=W0: XA=X1
  WHILE I<L
    CH$=MID$(STR,I+1,1)
    IF ASC(CH$)>=&H80 THEN
      I=I+1: CH$=CH$+MID$(STR,I+1,1)
    END IF
    WA=W0: CALL DrawChar(CH$,XA,Y1,FONT,WA,H,C)
    XA=XA+WA+SP0: I=I+1
  WEND
END SUB

SUB DrawChar(STR AS STRING, X0 AS INTEGER, Y0 AS INTEGER, FONT AS INTEGER, W AS INTEGER, H AS INTEGER, C AS INTEGER)
  STATIC Param AS FontDataT
  IF ASC(MID$(STR,1,1)) < &H80 THEN
    Param.CH0=STR: Param.CH1=CHR$(0)
    Param.W=W\2
  ELSE
    Param.CH0=MID$(STR,2,1): Param.CH1=MID$(STR,1,1)
    Param.W=W
  END IF
  Param.FONT=FONT: Param.H=H
  Param.TOP=0: Param.BOTTOM=H-1
  Param.ATTR=1: Param.BUFLEN=16384
  DS=VARSEG(Param):SI=VARPTR(Param)
  ES=VARSEG(BITMAP(0)):DI=VARPTR(BITMAP(0))
  DEF SEG=VARSEG(ASM(0))
  CALL ABSOLUTE(BYVAL DS,BYVAL SI,BYVAL ES,BYVAL DI,VARPTR(ASM(0))+&H30)
  DEF SEG
  W=Param.W
  DEF SEG=VARSEG(BITMAP(0)): ROWBYTES=(W+7)\8: PX=VARPTR(BITMAP(0)): P=PEEK(PX)
  FOR Y=0 TO (H-1): FOR X=0 TO (W-1)
    IF P AND BITMASK(X AND 7) THEN PSET (X0+X,Y0+Y),C
    IF (X AND 7)=7 OR X=(W-1) THEN PX=PX+1: P=PEEK(PX)
  NEXT X: NEXT Y: DEF SEG
END SUB

