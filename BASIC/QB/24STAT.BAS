DEFINT A-Z
DIM SHARED N(4) AS INTEGER,P(24,4) AS INTEGER
COMMON SHARED ANS,CNT,PL,IP,FTMP$
COMMON SHARED IDX AS LONG,IDXMAX AS LONG
FTMP$="24STAT.TMP":FRES$="24STAT.CSV"
NMAX=13:ANS=0:IDX=0:CNT=0:IP=0:PL=0
NEWSESSION=0
FOR I=0 TO 3:N(I)=1:NEXT I
FOR I0=1 TO NMAX:FOR I1=I0 TO NMAX:FOR I2=I1 TO NMAX:FOR I3=I2 TO NMAX
  IDXMAX=IDXMAX+1
NEXT I3:NEXT I2:NEXT I1:NEXT I0
FOR I=0 TO 3:FOR J=0 TO 3
  IF I<>J THEN
    FOR K=0 TO 3
      IF I<>K AND J<>K THEN
        P(PL,0)=I:P(PL,1)=J:P(PL,2)=K:P(PL,3)=6-I-J-K
	PL=PL+1
      END IF
    NEXT K
  END IF
NEXT J:NEXT I

ON ERROR GOTO ErrorHandler
OPEN FTMP$ FOR INPUT AS #2
INPUT #2,ANS,CNT,N(0),N(1),N(2),N(3),IP,IDX:CLOSE #2
ON ERROR GOTO 0

IF NEWSESSION=1 THEN
  OPEN FRES$ FOR OUTPUT AS #1
  PRINT #1,"Goal,Sovlable In "+LTRIM$(RTRIM$(STR$(IDXMAX)))
  CLOSE #1
END IF

NEWANS=0
PRINT "Press any key to exit with current progress saved"
WHILE ANS<=99
  LOCATE ,1:PRINT USING "Progress:##.###%";ANS+IDX/IDXMAX;
  PRINT TAB(30);
  IF HASANS(N(),IP,ANS)<>0 THEN CNT=CNT+1:IP=0 ELSE IP=IP+1
  IF IP>=PL OR IP=0 THEN
    N(3)=N(3)+1
    IF N(3)>NMAX THEN
      N(2)=N(2)+1
      IF N(2)>NMAX THEN
        N(1)=N(1)+1
        IF N(1)>NMAX THEN
          N(0)=N(0)+1
          IF N(0)>NMAX THEN
	    CALL WRITECSV(ANS,CNT)
            ANS=ANS+1:N(0)=1:NEWANS=1
          END IF
          N(1)=N(0)
        END IF
        N(2)=N(1)
      END IF
      N(3)=N(2)
    END IF
    IP=0
    IF NEWANS=1 THEN
      CNT=0:IDX=0:NEWANS=0
    ELSE
      IDX=IDX+1
    END IF
  END IF
  IF INKEY$<>"" THEN
    CALL SNAPSHOT
    END
  END IF
WEND
KILL FTMP$
END

ErrorHandler:
NEWSWSSION=1
RESUME NEXT

SUB SNAPSHOT
  OPEN FTMP$ FOR OUTPUT AS #1
  PRINT #1,ANS;CNT;N(0);N(1);N(2);N(3);IP;IDX
  CLOSE #1
END SUB

SUB WRITECSV(ANS AS INTEGER,CNT AS INTEGER)
  OPEN FRES$ FOR APPEND AS #1
  PRINT #1,LTRIM$(RTRIM$(STR$(ANS)));",";LTRIM$(RTRIM$(STR$(CNT)))
  CLOSE #1
END SUB

FUNCTION HASANS(N() AS INTEGER,I AS INTEGER,ANS AS INTEGER):
  FOR OP0=0 TO 3:FOR OP1=0 TO 3:FOR OP2=0 TO 3
    IF CHECKANS(N(P(I,0)),N(P(I,1)),N(P(I,2)),N(P(I,3)),OP0,OP1,OP2,ANS)=1 THEN
      HASANS=1:EXIT FUNCTION
    END IF
  NEXT OP2:NEXT OP1:NEXT OP0
  HASANS=0
END FUNCTION

FUNCTION CALC#(X AS DOUBLE,OP AS INTEGER,Y AS DOUBLE)
  IF X>=1000000 OR Y>=1000000 THEN CALC#=10000000:EXIT FUNCTION
  SELECT CASE OP
    CASE 0
      CALC#=X+Y
    CASE 1
      CALC#=X-Y
    CASE 2
      CALC#=X*Y
    CASE 3
      IF Y=0 THEN CALC#=10000000 ELSE CALC#=X/Y
  END SELECT
END FUNCTION

FUNCTION CHECKANS(N0 AS INTEGER,N1 AS INTEGER,N2 AS INTEGER,N3 AS INTEGER,OP0 AS INTEGER,OP1 AS INTEGER,OP2 AS INTEGER,ANS AS INTEGER)
  A#=N0:B#=N1:C#=N2:D#=N3:S#=ANS

  REM abcd### a#(b#(c#d))
  R#=CALC#(A#,OP0,CALC#(B#,OP1,CALC#(C#,OP2,D#)))
  IF ABS(R#-S#)<0.000001 THEN CHECKANS=1:EXIT FUNCTION

  REM abc#d## a#((b#c)#d)
  R#=CALC#(A#,OP0,CALC#(CALC#(B#,OP1,C#),OP2,D#))
  IF ABS(R#-S#)<0.000001 THEN CHECKANS=1:EXIT FUNCTION

  REM abc##d# (a#(b#c))#d
  R#=CALC#(CALC#(A#,OP0,CALC(B#,OP1,C#)),OP2,D#)
  IF ABS(R#-S#)<0.000001 THEN CHECKANS=1:EXIT FUNCTION

  REM ab#cd## (a#b)#(c#d)
  R#=CALC#(CALC#(A#,OP0,B#),OP1,CALC#(C#,OP2,D#))
  IF ABS(R#-S#)<0.000001 THEN CHECKANS=1:EXIT FUNCTION

  REM ab#c#d# ((a#b)#c)#d
  R#=CALC#(CALC#(CALC#(A#,OP0,B#),OP1,C#),OP2,D#)
  IF ABS(R#-S#)<0.000001 THEN CHECKANS=1:EXIT FUNCTION

  CHECKANS=0
END FUNCTION

